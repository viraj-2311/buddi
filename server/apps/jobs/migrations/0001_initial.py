# Generated by Django 3.0.6 on 2021-03-19 16:47

import apps.jobs.constants
import apps.jobs.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_profile_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_contact', models.CharField(max_length=50)),
                ('agency_contact_title', models.CharField(max_length=50)),
                ('agency_address', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'agency',
            },
        ),
        migrations.CreateModel(
            name='CallSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_contact_phone', models.CharField(max_length=255)),
                ('hospital', models.CharField(max_length=255)),
                ('hospital_state', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_city', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('parking', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'call_sheet',
            },
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_title', models.CharField(max_length=50)),
                ('full_name', models.CharField(max_length=50)),
                ('profile_photo', models.CharField(blank=True, max_length=500, null=True)),
                ('origin_profile_photo', models.CharField(blank=True, max_length=500, null=True)),
                ('benji_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cast',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_profile_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('client_contact', models.CharField(max_length=50)),
                ('client_contact_title', models.CharField(max_length=50)),
                ('client_address', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('document', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.CharField(max_length=255)),
                ('agency', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('job_number', models.CharField(max_length=255, unique=True)),
                ('start_date', models.DateField()),
                ('wrap_date', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('ACTIVE', 'ACTIVE'), ('ARCHIVED', 'ARCHIVED'), ('WRAPPED', 'WRAPPED')], default='PENDING', max_length=255)),
                ('exec_producer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('exec_producer_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('director_name', models.CharField(blank=True, max_length=255, null=True)),
                ('director_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('line_producer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('line_producer_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Company')),
                ('director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='director', to=settings.AUTH_USER_MODEL)),
                ('exec_producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exec_producer', to=settings.AUTH_USER_MODEL)),
                ('line_producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='line_producer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job',
                'unique_together': {('company', 'job_number')},
            },
        ),
        migrations.CreateModel(
            name='JobMemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memo_type', models.CharField(choices=[('HOLD', 'HOLD'), ('DEAL', 'DEAL')], default='HOLD', max_length=255)),
                ('memo_staff', models.CharField(choices=[('CONTRACTOR W2', 'CONTRACTOR W2'), ('CONTRACTOR W9', 'CONTRACTOR W9'), ('EMPLOYEE', 'EMPLOYEE'), ('AGENCY', 'AGENCY')], default='EMPLOYEE', max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('full_name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('pay_terms', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('price_type', models.CharField(choices=[('HOURLY', 'HOURLY'), ('FIXED', 'FIXED')], default='FIXED', max_length=255)),
                ('daily_hours', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('working_days', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('working_rate', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('kit_fee', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('project_rate', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('acceptance_level', models.IntegerField(blank=True, choices=[(apps.jobs.constants.ContractorAcceptanceLevel['FIRST'], '1st'), (apps.jobs.constants.ContractorAcceptanceLevel['SECOND'], '2nd'), (apps.jobs.constants.ContractorAcceptanceLevel['THIRD'], '3rd')], null=True)),
                ('choice_level', models.IntegerField(blank=True, choices=[(apps.jobs.constants.MemoChoiceLevelInJob['FIRST'], '1st Choice'), (apps.jobs.constants.MemoChoiceLevelInJob['SECOND'], '2nd Choice'), (apps.jobs.constants.MemoChoiceLevelInJob['THIRD'], '3rd Choice')], null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('decline', models.BooleanField(default=False)),
                ('booked', models.BooleanField(default=False)),
                ('is_memo', models.BooleanField(default=True)),
                ('optional_message', models.CharField(blank=True, max_length=500, null=True)),
                ('benji_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_job_memo', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job_memo',
            },
        ),
        migrations.CreateModel(
            name='JobRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'job_role',
            },
        ),
        migrations.CreateModel(
            name='JobRoleBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.IntegerField(null=True)),
                ('job_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.JobRole')),
            ],
            options={
                'db_table': 'job_role_budget',
            },
        ),
        migrations.CreateModel(
            name='JobShootDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_shoot_dates',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(default='#000000', max_length=10)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('text_display', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_job', to='jobs.Job')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'script',
            },
        ),
        migrations.CreateModel(
            name='Wardrobe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('cast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Cast')),
            ],
            options={
                'db_table': 'wardrobe',
            },
        ),
        migrations.CreateModel(
            name='WardrobeNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('x_coord', models.FloatField()),
                ('y_coord', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('wardrobe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Wardrobe')),
            ],
            options={
                'db_table': 'wardrobe_note',
            },
        ),
        migrations.CreateModel(
            name='VirtualMemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('choice_level', models.IntegerField(choices=[(apps.jobs.constants.MemoChoiceLevelInJob['FIRST'], '1st Choice'), (apps.jobs.constants.MemoChoiceLevelInJob['SECOND'], '2nd Choice'), (apps.jobs.constants.MemoChoiceLevelInJob['THIRD'], '3rd Choice')], null=True)),
                ('is_memo', models.BooleanField(default=False)),
                ('benji_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRole')),
            ],
            options={
                'db_table': 'virtual_memo',
            },
        ),
        migrations.CreateModel(
            name='UserSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benji_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Schedule')),
            ],
            options={
                'db_table': 'user_schedule',
            },
        ),
        migrations.CreateModel(
            name='ShootNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True)),
                ('job_shoot_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobShootDate')),
            ],
            options={
                'db_table': 'shoot_note',
            },
        ),
        migrations.CreateModel(
            name='PreProductionBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('is_cover_updated', models.BooleanField(default=False)),
                ('is_title_updated', models.BooleanField(default=False)),
                ('is_attendees_updated', models.BooleanField(default=False)),
                ('is_board_script_updated', models.BooleanField(default=False)),
                ('is_schedule_updated', models.BooleanField(default=False)),
                ('is_cast_updated', models.BooleanField(default=False)),
                ('is_wardrobe_updated', models.BooleanField(default=False)),
                ('is_callsheet_updated', models.BooleanField(default=False)),
                ('is_location_updated', models.BooleanField(default=False)),
                ('is_weather_updated', models.BooleanField(default=False)),
                ('is_thank_you_updated', models.BooleanField(default=False)),
                ('is_watermark_updated', models.BooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ppb_job', to='jobs.Job')),
            ],
            options={
                'db_table': 'job_pre_production_book',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_title', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(max_length=255)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=255, null=True)),
                ('lng', models.CharField(blank=True, max_length=255, null=True)),
                ('view_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job', to='jobs.Job')),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='JobSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ppb_settings', jsonfield.fields.JSONField(default=dict)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_settings',
            },
        ),
        migrations.CreateModel(
            name='JobScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='script_job', to='jobs.Job')),
                ('script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Script')),
            ],
            options={
                'db_table': 'job_script',
            },
        ),
        migrations.CreateModel(
            name='JobRoleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Company')),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_role_type',
            },
        ),
        migrations.CreateModel(
            name='JobRoleId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exec_producer_id', models.IntegerField(blank=True, null=True)),
                ('line_producer_id', models.IntegerField(blank=True, null=True)),
                ('director_id', models.IntegerField(blank=True, null=True)),
                ('production_manager_id', models.IntegerField(blank=True, null=True)),
                ('production_coordinator_id', models.IntegerField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_role_ids',
            },
        ),
        migrations.CreateModel(
            name='JobRoleGroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Company')),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_role_group_type',
            },
        ),
        migrations.CreateModel(
            name='JobRoleGroupId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talent_id', models.IntegerField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'job_role_group_ids',
            },
        ),
        migrations.CreateModel(
            name='JobRoleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.BooleanField(default=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
                ('job_role_group_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRoleGroupType')),
            ],
            options={
                'db_table': 'job_role_group',
                'unique_together': {('job_role_group_type', 'job')},
            },
        ),
        migrations.CreateModel(
            name='JobRoleBudgetLineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.IntegerField(null=True)),
                ('job_role_budget', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.JobRoleBudget')),
            ],
            options={
                'db_table': 'job_role_budget_line_item',
            },
        ),
        migrations.AddField(
            model_name='jobrole',
            name='job_role_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRoleGroup'),
        ),
        migrations.AddField(
            model_name='jobrole',
            name='job_role_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRoleType'),
        ),
        migrations.CreateModel(
            name='JobMemoShootDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('job_memo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobMemo')),
            ],
            options={
                'db_table': 'job_memo_shoot_dates',
            },
        ),
        migrations.CreateModel(
            name='JobMemoInvitationToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('expiry', models.DateTimeField(blank=True, null=True)),
                ('job_memo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobMemo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='jobmemo',
            name='job_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRole'),
        ),
        migrations.AddField(
            model_name='jobmemo',
            name='memo_sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_job_memo', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='JobDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Document')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_job', to='jobs.Job')),
            ],
            options={
                'db_table': 'job_document',
            },
        ),
        migrations.CreateModel(
            name='JobBid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, max_length=255, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bid_job', to='jobs.Job')),
            ],
            options={
                'db_table': 'job_bid',
            },
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_contact', models.CharField(max_length=50)),
                ('client_contact_title', models.CharField(max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='jobs.Client')),
            ],
            options={
                'db_table': 'client_contact',
            },
        ),
        migrations.CreateModel(
            name='ClientCallSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_contact_phone', models.CharField(max_length=255)),
                ('hospital', models.CharField(max_length=255)),
                ('hospital_state', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_city', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital_zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('parking', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clientcallsheet_location', to='jobs.Location')),
                ('production_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'client_call_sheet',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_job', to='jobs.Job'),
        ),
        migrations.AddField(
            model_name='cast',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cast_job', to='jobs.Job'),
        ),
        migrations.AddField(
            model_name='cast',
            name='job_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRole'),
        ),
        migrations.CreateModel(
            name='CallSheetJobMemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('call_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.CallSheet')),
                ('job_memo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobMemo')),
            ],
            options={
                'db_table': 'call_sheet_job_memo',
            },
        ),
        migrations.AddField(
            model_name='callsheet',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job'),
        ),
        migrations.AddField(
            model_name='callsheet',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='callsheet_location', to='jobs.Location'),
        ),
        migrations.AddField(
            model_name='callsheet',
            name='production_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AgencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency_contact', models.CharField(max_length=50)),
                ('agency_contact_title', models.CharField(max_length=50)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='jobs.Agency')),
            ],
            options={
                'db_table': 'agency_contact',
            },
        ),
        migrations.AddField(
            model_name='agency',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agency_job', to='jobs.Job'),
        ),
        migrations.AlterUniqueTogether(
            name='jobrole',
            unique_together={('job_role_type', 'job_role_group')},
        ),
        migrations.AlterUniqueTogether(
            name='jobmemo',
            unique_together={('benji_account', 'job_role', 'memo_type')},
        ),
        migrations.CreateModel(
            name='CrewTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('template', apps.jobs.models.RawJSONField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Company')),
            ],
            options={
                'db_table': 'crew_templates',
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CompanyDashboardJobRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Company')),
                ('job_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.JobRole')),
            ],
            options={
                'db_table': 'company_dashboard_job_roles',
                'unique_together': {('company', 'job_role')},
            },
        ),
    ]
